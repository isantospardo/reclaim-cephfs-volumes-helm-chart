---
variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - test
  - build

.topic_branch_variables: &topic_branch_variables
  TAG: $CI_COMMIT_REF_NAME

.build_kaniko_command: &base
  stage: build
  image:
      # We recommend using the CERN version of the Kaniko image: gitlab-registry.cern.ch/ci-tools/docker-image-builder
      name: gitlab-registry.cern.ch/ci-tools/docker-image-builder
      entrypoint: [""]
  script:
      - export DATE=`date -u +%Y.%m.%dT%H-%M-%SZ`
      - export TAG=${TAG:-"RELEASE".$DATE}
      - export CONTEXT=${CONTEXT:-$CI_PROJECT_DIR}
      - export DOCKERFILE_PATH=${DOCKERFILE_PATH:-Dockerfile}
      - |
        export DOCKERFILE=$CONTEXT/$DOCKERFILE_PATH
        if ! [ -f "$DOCKERFILE" ]; then
          echo 'Dockerfile not found, please set both CONTEXT and DOCKERFILE_PATH properly' >&2
          exit 1
        fi
      # Prepare Kaniko configuration file:
      - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
      # Build and push the image from the Dockerfile at the root of the project.
      # To push to a specific docker tag, amend the --destination parameter, e.g. --destination $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
      # See https://docs.gitlab.com/ee/ci/variables/predefined_variables.html#variables-reference for available variables
      - /kaniko/executor --context "$CONTEXT" --dockerfile "$CONTEXT/$DOCKERFILE_PATH" --destination "$CI_REGISTRY_IMAGE:$TAG"

integration_tests:
  stage: test
  image: gitlab-registry.cern.ch/paas-tools/openshift-client:v3.11.0
  tags:
  - privileged-runner-okd3
  #- docker-privileged
  variables:
    image_to_test: reclaimer-image
    # arbitrarily use the default namespace, since we're guaranteed it exists.
    namespace: default
    # Disable TLS following https://about.gitlab.com/2019/07/31/docker-in-docker-with-docker-19-dot-03/
    # This will result in a warning that the docker-in-docker service may not have started successfully
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - yum install -y docker-client
    - host_ip=$(docker run --network=host --rm alpine ip -family inet -oneline addr show dev eth0 | awk '{print $4}' | cut -d / -f 1)
    - oc cluster up --public-hostname=${host_ip}
    - oc login -u system:admin
    - oc project ${namespace}
    # give the default serviceaccount in current namespace the necessary permissions to reclaim PVs
    - oc adm policy add-cluster-role-to-user system:csi-external-attacher -z default
  script:
    # Build the image to test
    - docker build -t ${image_to_test} .
    - ./tests/test.sh

Build Master:
  <<: *base
  only:
  - master

Build Topic Branch:
  <<: *base
  except:
  - master
  variables:
    <<: *topic_branch_variables
