---

stages:
  - test
  - build

build_kaniko:
    stage: build
    only:
      - master
    image:
        # We recommend using the CERN version of the Kaniko image: gitlab-registry.cern.ch/ci-tools/docker-image-builder
        name: gitlab-registry.cern.ch/ci-tools/docker-image-builder
        entrypoint: [""]
    script:
        - "echo 'Building image ...'"
        # Prepare Kaniko configuration file
        - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
        # Build and push the image from the Dockerfile at the root of the project.
        # To push to a specific docker tag, amend the --destination parameter, e.g. --destination $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
        # See https://docs.gitlab.com/ee/ci/variables/predefined_variables.html#variables-reference for available variables
        - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE

build_kaniko:
    stage: build
    except:
      - master
    image:
        # We recommend using the CERN version of the Kaniko image: gitlab-registry.cern.ch/ci-tools/docker-image-builder
        name: gitlab-registry.cern.ch/ci-tools/docker-image-builder
        entrypoint: [""]
    script:
        - "echo 'Building image ...'"
        # Prepare Kaniko configuration file
        - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
        # Build and push the image from the Dockerfile at the root of the project.
        # To push to a specific docker tag, amend the --destination parameter, e.g. --destination $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
        # See https://docs.gitlab.com/ee/ci/variables/predefined_variables.html#variables-reference for available variables
        - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE
    when: manual # don't build automatically with every push

integration_tests:
  stage: test
  image: gitlab-registry.cern.ch/paas-tools/openshift-client:v3.11.0
  tags:
  - docker-privileged
  variables:
    image_to_test: reclaimer-image
  before_script:
    - yum install -y docker-client
    - host_ip=$(docker run --network=host --rm alpine ip -family inet -oneline addr show dev eth0 | awk '{print $4}' | cut -d / -f 1)
    - oc cluster up --public-hostname=${host_ip}
    - oc login -u system:admin
    # give the default serviceaccount the necessary permissions to reclaim PVs
    - oc adm policy add-cluster-role-to-user system:csi-external-attacher -z default
  script:
    # Build the image to test
    - docker build -t ${image_to_test} .
    - ./tests/test.sh
